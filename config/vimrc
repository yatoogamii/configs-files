
""""""""""""""""""""""""""""""""""""""""""""""""""""
"""""""""""""""""""""Plugin"""""""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""

		call plug#begin()

        Plug 'valloric/youcompleteme'
        Plug 'tpope/vim-fugitive'                               " Git plug
        Plug 'tpope/vim-surround'                               " easy { [ ( :wq
        Plug 'vim-airline/vim-airline'
        Plug 'tpope/vim-repeat'
        Plug 'mattn/emmet-vim'                                  " Html
        Plug 'lifepillar/vim-solarized8'
        Plug 'sirver/ultisnips'
        Plug 'vim-airline/vim-airline-themes'
        Plug 'tpope/vim-commentary'
        Plug 'ervandew/supertab'
        Plug 'sjl/gundo.vim'
        Plug 'honza/vim-snippets'
        Plug 'ap/vim-css-color'
        Plug 'wellle/targets.vim'
        Plug 'junegunn/gv.vim'
        Plug 'jiangmiao/auto-pairs'
        Plug 'alvan/vim-closetag'
        Plug 'xolox/vim-misc'
        Plug 'ryanoasis/vim-devicons'
        Plug 'easymotion/vim-easymotion'
        Plug 'etdev/vim-hexcolor'
        Plug 'mattn/webapi-vim'
        Plug 'rhysd/vim-healthcheck'
        Plug 'terryma/vim-multiple-cursors'
        Plug 'airblade/vim-gitgutter'
        Plug 'fredkschott/covim'   " vim live-share
        
		call plug#end()

"""""""""""""""""""""""""""""""""""""""""""""""""""
""""""""""""""""""Command option""""""""""""""""""""
""""""""""""""""""""""""""""""""""""""""""""""""""""

       	"set number
        set nocompatible
        set relativenumber
        filetype plugin on
        syntax on
        set t_Co=256
        let g:solarized_termcolors=256
        let g:solarized_termtrans = 1
        set background=dark
        colorscheme solarized8_high
        let g:solarized_use16 = 1
        set showcmd                           "show command at bottom right
        let g:airline#extensions#tabline#enabled = 1
        let g:airline_theme = 'solarized'
        set laststatus =2                     "show status line
        set noshowmode
        set incsearch
        " show existing tab with 4 spaces width
        set tabstop=2
        " when indenting with '>', use 2 spaces width
        set shiftwidth=2
        " On pressing tab, insert 4 spaces
        set expandtab
        set scrolloff =19                     "page down with my cursor
        set cursorline                        "blink cursor line
        set ignorecase
        " set wrap
        " set tw=80
        " set wm=2
        let &showbreak ="↳ "
        set fileencodings+=utf-8
        set encoding=utf-8
        if (has("termguicolors"))
          set termguicolors
        endif
        set autoread                        " scss auto refresh main.css"
        au FocusGained,BufEnter * :silent! !

        " make YCM compatible with UltiSnips (using supertab)
        let g:ycm_key_list_select_completion = ['<C-n>', '<Down>']
        let g:ycm_key_list_previous_completion = ['<C-p>', '<Up>']
        let g:SuperTabDefaultCompletionType = '<C-n>'
        " better key bindings for UltiSnipsExpandTrigger
        let g:UltiSnipsExpandTrigger = "<tab>"
        let g:UltiSnipsJumpForwardTrigger = "<tab>"
        let g:UltiSnipsJumpBackwardTrigger = "<s-tab>"

        " Maintain undo history between sessions
        set undofile
        " Save folder undo history
        set undodir=~/.vim/undodir

        " Set this. Airline will handle the rest.
        let g:airline#extensions#ale#enabled = 1

        """"""""""""""""""""""""""""""""""""""""""""""""""""
        """""""""""""""""""""Remapp"""""""""""""""""""""""""
        """"""""""""""""""""""""""""""""""""""""""""""""""""

        let mapleader=","

        map <up> <nop>
        map <down> <nop>
        map <left> <nop>
        map <right> <nop>
        imap <up> <nop>
        imap <down> <nop>
        imap <left> <nop>
        imap <right> <nop>

        map ,, <esc>
        imap ,, <esc>
        map ² `
        imap ² `

        " Move visual selection
        vnoremap J :m '>+1gv=gv
        vnoremap K :m '<-2gv=gv

        map <F6> :NERDTreeToggle<CR>
        nnoremap <F5> :GundoToggle<CR>

        nnoremap <c-f> :Files<CR>
        nnoremap <C-g> :Rg<Cr>
        nnoremap <C-c> :Commits<Cr>

        " disable shortcut Auto-pairs for enable î"
        let g:AutoPairsShortcutToggle     = 'π' " <m-p>
        let g:AutoPairsShortcutFastWrap   = '∑' " <m-w>
        let g:AutoPairsShortcutJump       = '∆' " <m-j>
        let g:AutoPairsShortcutBackInsert = '∫' " <m-b>
        let g:AutoPairsMoveCharacter = 'Ω' 

        """"""""""""""""""""""""""""""""""""""""""""""""""""
        """"""""""""""""""""""Macro""""""""""""""""""""""""
        """"""""""""""""""""""""""""""""""""""""""""""""""""


        let @s='ysiw'






        """"""""""""""""""""""""""""""""""""""""""""""""""""
        """"""""""""""""""""""Others""""""""""""""""""""""""
        """"""""""""""""""""""""""""""""""""""""""""""""""""

